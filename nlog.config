<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off"
      internalLogFile="c:\home\LogFiles\nlog-internal.log">
  <!-- Variables de configuración -->
  <variable name="logDirectory" value="${basedir}/logs"/>
  <variable name="applicationName" value="Lab05WebApiML"/>

  <!-- Extensiones opcionales -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <!-- Destinos de logging -->
  <targets>
    
    <!-- Azure App Service Logs -->
    <target xsi:type="File"
            name="azureFile"
            fileName="c:\home\LogFiles\Application\platform-web-api-${shortdate}.log"
            layout="${longdate} ${level:uppercase=true} ${logger} - ${message} ${exception:format=tostring}" />

    <!-- Console para Azure Log Stream -->
    <target xsi:type="Console"
            name="consoleTarget"
            layout="${longdate} ${level:uppercase=true} ${logger} - ${message} ${exception:format=tostring}" />
    
    <!-- Archivo para todos los logs (envuelto en async para mejor rendimiento) -->
    <target xsi:type="AsyncWrapper" name="asyncAllfile">
      <target xsi:type="File"
              name="allfile"
              fileName="${logDirectory}/${applicationName}-all-${shortdate}.log"
              layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|user: ${aspnet-user-identity}"
              archiveEvery="Day"
              archiveNumbering="Rolling"
              maxArchiveFiles="30"
              concurrentWrites="true"
              keepFileOpen="false" />
    </target>
    <!-- Archivo específico para errores (envuelto en async) -->
    <target xsi:type="AsyncWrapper" name="asyncErrorfile">
      <target xsi:type="File"
              name="errorfile"
              fileName="${logDirectory}/${applicationName}-error-${shortdate}.log"
              layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|user: ${aspnet-user-identity}|${newline}${exception:format=toString,Data:maxInnerExceptionLevel=10}"
              archiveEvery="Day"
              archiveNumbering="Rolling"
              maxArchiveFiles="30"
              concurrentWrites="true"
              keepFileOpen="false" />
    </target>
    <!-- Archivo para logs de autenticación (envuelto en async) -->
    <target xsi:type="AsyncWrapper" name="asyncAuthfile">
      <target xsi:type="File"
              name="authfile"
              fileName="${logDirectory}/${applicationName}-auth-${shortdate}.log"
              layout="${longdate}|${uppercase:${level}}|${message}|user: ${aspnet-user-identity}|ip: ${aspnet-request-ip}|method: ${aspnet-request-method}|url: ${aspnet-request-url}|user-agent: ${aspnet-request-useragent}"
              archiveEvery="Day"
              archiveNumbering="Rolling"
              maxArchiveFiles="90"
              concurrentWrites="true"
              keepFileOpen="false" />
    </target>
    <!-- Archivo para logs de seguridad y auditoría (envuelto en async) -->
    <target xsi:type="AsyncWrapper" name="asyncSecurityfile">
      <target xsi:type="File"
              name="securityfile"
              fileName="${logDirectory}/${applicationName}-security-${shortdate}.log"
              layout="${longdate}|${uppercase:${level}}|SECURITY|${message}|user: ${aspnet-user-identity}|ip: ${aspnet-request-ip}|action: ${aspnet-mvc-action}|controller: ${aspnet-mvc-controller}|${event-properties:item=AdditionalInfo}"
              archiveEvery="Day"
              archiveNumbering="Rolling"
              maxArchiveFiles="180"
              concurrentWrites="true"
              keepFileOpen="false" />
    </target>
    <!-- Consola para desarrollo -->
    <target xsi:type="Console"
            name="console"
            layout="${longdate}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />
    <!-- Base de datos para logs críticos (envuelto en async para no bloquear si la DB falla) -->
    <target xsi:type="AsyncWrapper" name="asyncDatabase">
      <target xsi:type="Database"
              name="database"
              connectionString="${configsetting:name=ConnectionStrings.DefaultConnection}"
              commandText="INSERT INTO Logs (Application, Logged, Level, Message, Logger, CallSite, Exception, UserName, IP, Url, ServerName)
                          VALUES (@Application, @Logged, @Level, @Message, @Logger, @Callsite, @Exception, @UserName, @IP, @Url, @ServerName);">
        <parameter name="@Application" layout="${applicationName}" />
        <parameter name="@Logged" layout="${date}" />
        <parameter name="@Level" layout="${level}" />
        <parameter name="@Message" layout="${message}" />
        <parameter name="@Logger" layout="${logger}" />
        <parameter name="@CallSite" layout="${callsite:filename=true}" />
        <parameter name="@Exception" layout="${exception:tostring}" />
        <parameter name="@UserName" layout="${aspnet-user-identity}" />
        <parameter name="@IP" layout="${aspnet-request-ip}" />
        <parameter name="@Url" layout="${aspnet-request-url}" />
        <parameter name="@ServerName" layout="${machinename}" />
      </target>
    </target>
    <!-- Null target para descartar logs innecesarios -->
    <target xsi:type="Null" name="blackhole" />
  </targets>
  <!-- Reglas de routing -->
  <rules>
      <!-- Mostrar información de Azure en consola --> 
      
      <logger name="*" minlevel="Trace" writeTo="azureFile" />
      <logger name="*" minlevel="Info" writeTo="consoleTarget" />

      <!-- Mostrar información de hosting en consola -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="console" final="true" />
    <!-- Ignorar logs de Microsoft no críticos -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    <!-- Logs de autenticación (con final=true para aislamiento) -->
    <logger name="*AuthenticationController" minlevel="Info" writeTo="asyncAuthfile" final="true" />
    <logger name="*JwtService" minlevel="Info" writeTo="asyncAuthfile" final="true" />
    <logger name="Lab05WebApiML.Services.*" minlevel="Info" writeTo="asyncAuthfile" final="true" />

    <!-- Logs de seguridad y roles (con final=true para aislamiento) -->
    <logger name="*RolesController" minlevel="Info" writeTo="asyncSecurityfile" final="true" />
    <logger name="Microsoft.AspNetCore.Authorization.*" minlevel="Warn" writeTo="asyncSecurityfile" final="true" />
    <logger name="Microsoft.AspNetCore.Authentication.*" minlevel="Warn" writeTo="asyncSecurityfile" final="true" />

    <!-- Todos los errores van al archivo de errores y a la base de datos -->
    <logger name="*" minlevel="Error" writeTo="asyncErrorfile,asyncDatabase" />

    <!-- Todos los logs van al archivo general -->
    <logger name="*" minlevel="Trace" writeTo="asyncAllfile" />

    <!-- En desarrollo, también mostrar en consola -->
    <logger name="*" minlevel="Debug" writeTo="console" />
  </rules>
</nlog>